plugins {
    id 'java'
}

apply plugin : 'eclipse'

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // transitively export following dependency to tests project
    apiElements fileTree(include: ['*.jar'], dir: 'libs')
}

sourceCompatibility = '11'
targetCompatibility = '11'

jar { 
    manifest { 
        attributes 'Implementation-Version': "${rootProject.version}"
    }
}

java {
    modularity.inferModulePath = true
}

sourceSets {
    main {
        java {
            srcDirs += ["src/main/gen"]
        }
    }
}

javadoc {
    exclude 'id/jrosclient/app/**'
    options.noTimestamp = true;
    options.noQualifiers = ["all"];
    options.noTree = true;
    options.noIndex = true;
    options.noNavBar = true;
    options.addStringOption('Xdoclint:none', '-quiet')
}

def packageDir = "$buildDir/package/${projectName}"

ext.artifacts = fileTree(include: ['*'], dir: "$packageDir/libs")

task createRelease(type: Zip) {
    archiveFileName = "$releaseFileName"
    destinationDirectory = file("$projectDir/release")
    from file("$packageDir/..")
}
/*
import org.apache.tools.ant.filters.ReplaceTokens
task updateVersion(type:Copy) {
    from "${project.rootDir}/README.md"
    into releaseDir
    filter(ReplaceTokens, tokens: [version: rootProject.version])
}*/

task copyLibs(type: Copy) {
    from "$projectDir/libs"
    from jar.archiveFile
    into "${packageDir}/libs"
}

task copySamples(type: Copy) {
    from("${project.rootDir}/jrosclient.samples/src") {
        include "**"
    }
    into "${packageDir}/samples"
}

task createPackage(type: Copy, dependsOn: [copyLibs, copySamples]) {
    from "${project.rootDir}/README.md"
    from "${project.rootDir}/LICENSE-2.0.txt"
    from file("$projectDir/src/jrosclient")
    into packageDir
}

task cleanRelease(type: Delete) {
    delete "$projectDir/release"
}

createRelease.dependsOn createPackage, javadoc
assemble.dependsOn createRelease
clean.dependsOn cleanRelease

apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'id.jrosclient'
            group = "io.github.lambdaprime"
            version = "${version}"
            artifact jar.archiveFile
        }
    }
}
