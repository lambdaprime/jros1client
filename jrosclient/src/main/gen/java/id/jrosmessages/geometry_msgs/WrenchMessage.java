/*
 * Copyright 2021 msgmonster project
 * 
 * Website: https://github.com/pinorobotics/msgmonster
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * msgmonster autogenerated Message class for jrosclient
 * 
 * Generated for ROS msg file: geometry_msgs/Wrench
 */

package id.jrosmessages.geometry_msgs;

import java.util.Objects;

import id.jrosmessages.Message;
import id.jrosmessages.MessageMetadata;
import id.kineticstreamer.annotations.Streamed;
import id.xfunction.XJson;

/**
 * Definition for geometry_msgs/Wrench This represents force in free space,
 * separated into # its linear and angular parts.
 */
@MessageMetadata(type = WrenchMessage.NAME, md5sum = "2aae87faaa553ae28e07e684016d765c")
public class WrenchMessage implements Message {

    static final String NAME = "geometry_msgs/Wrench";

    @Streamed
    public Vector3Message force = new Vector3Message();

    @Streamed
    public Vector3Message torque = new Vector3Message();

    public WrenchMessage withForce(Vector3Message force) {
        this.force = force;
        return this;
    }

    public WrenchMessage withTorque(Vector3Message torque) {
        this.torque = torque;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                force,
                torque);
    }

    @Override
    public boolean equals(Object obj) {
        var other = (WrenchMessage) obj;
        return Objects.equals(force, other.force) &&
                Objects.equals(torque, other.torque);
    }

    @Override
    public String toString() {
        return XJson.asString(
                "force", force,
                "torque", torque);
    }

}
